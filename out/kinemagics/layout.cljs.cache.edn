;; Analyzed by ClojureScript 1.7.48
{:use-macros nil, :excludes #{}, :name kinemagics.layout, :imports nil, :requires {runloop kinemagics.runloop, kinemagics.runloop kinemagics.runloop, c kinemagics.canvas-util, kinemagics.canvas-util kinemagics.canvas-util, velgraphs kinemagics.velgraphs, kinemagics.velgraphs kinemagics.velgraphs, config kinemagics.config, kinemagics.config kinemagics.config}, :uses nil, :defs {get-diy-canv-y {:protocol-inline nil, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 114, :column 7, :end-line 114, :end-column 21, :arglists (quote ([]))}, :name kinemagics.layout/get-diy-canv-y, :variadic false, :file "src\\kinemagics\\layout.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ctx {:name kinemagics.layout/ctx, :file "src\\kinemagics\\layout.cljs", :line 45, :column 1, :end-line 45, :end-column 9, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 45, :column 6, :end-line 45, :end-column 9}}, render-ball! {:protocol-inline nil, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 49, :column 7, :end-line 49, :end-column 19, :arglists (quote ([state]))}, :name kinemagics.layout/render-ball!, :variadic false, :file "src\\kinemagics\\layout.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, last-click {:name kinemagics.layout/last-click, :file "src\\kinemagics\\layout.cljs", :line 132, :column 3, :end-line 132, :end-column 18, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 132, :column 8, :end-line 132, :end-column 18}}, render-canvas! {:protocol-inline nil, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 69, :column 7, :end-line 69, :end-column 21, :arglists (quote ([state]))}, :name kinemagics.layout/render-canvas!, :variadic false, :file "src\\kinemagics\\layout.cljs", :end-column 21, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, event-to-point-y {:protocol-inline nil, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 120, :column 7, :end-line 120, :end-column 23, :arglists (quote ([event]))}, :name kinemagics.layout/event-to-point-y, :variadic false, :file "src\\kinemagics\\layout.cljs", :end-column 23, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, is-paused? {:protocol-inline nil, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 89, :column 7, :end-line 89, :end-column 17, :arglists (quote ([]))}, :name kinemagics.layout/is-paused?, :variadic false, :file "src\\kinemagics\\layout.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, user-drawing {:name kinemagics.layout/user-drawing, :file "src\\kinemagics\\layout.cljs", :line 107, :column 1, :end-line 107, :end-column 18, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 107, :column 6, :end-line 107, :end-column 18}}, init {:protocol-inline nil, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 92, :column 7, :end-line 92, :end-column 11, :arglists (quote ([]))}, :name kinemagics.layout/init, :variadic false, :file "src\\kinemagics\\layout.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, step-state {:protocol-inline nil, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 19, :column 7, :end-line 19, :end-column 17, :arglists (quote ([dt state]))}, :name kinemagics.layout/step-state, :variadic false, :file "src\\kinemagics\\layout.cljs", :end-column 17, :method-params ([dt state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dt state]))}, framelength {:name kinemagics.layout/framelength, :file "src\\kinemagics\\layout.cljs", :line 9, :column 1, :end-line 9, :end-column 17, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 9, :column 6, :end-line 9, :end-column 17}}, diy-canvas {:name kinemagics.layout/diy-canvas, :file "src\\kinemagics\\layout.cljs", :line 109, :column 1, :end-line 109, :end-column 16, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 109, :column 6, :end-line 109, :end-column 16}}, diy-ctx {:name kinemagics.layout/diy-ctx, :file "src\\kinemagics\\layout.cljs", :line 110, :column 1, :end-line 110, :end-column 13, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 110, :column 6, :end-line 110, :end-column 13}}, dummy-ctx {:name kinemagics.layout/dummy-ctx, :file "src\\kinemagics\\layout.cljs", :line 164, :column 1, :end-line 164, :end-column 15, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 164, :column 6, :end-line 164, :end-column 15}}, vect-to-list-with-order {:protocol-inline nil, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 124, :column 7, :end-line 124, :end-column 30, :arglists (quote ([vect]))}, :name kinemagics.layout/vect-to-list-with-order, :variadic false, :file "src\\kinemagics\\layout.cljs", :end-column 30, :method-params ([vect]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vect]))}, get-diy-canv-x {:protocol-inline nil, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 112, :column 7, :end-line 112, :end-column 21, :arglists (quote ([]))}, :name kinemagics.layout/get-diy-canv-x, :variadic false, :file "src\\kinemagics\\layout.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init-state {:name kinemagics.layout/init-state, :file "src\\kinemagics\\layout.cljs", :line 11, :column 1, :end-line 11, :end-column 16, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 11, :column 6, :end-line 11, :end-column 16}}, paused-checkbox {:name kinemagics.layout/paused-checkbox, :file "src\\kinemagics\\layout.cljs", :line 87, :column 1, :end-line 87, :end-column 21, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 87, :column 6, :end-line 87, :end-column 21}}, state {:name kinemagics.layout/state, :file "src\\kinemagics\\layout.cljs", :line 93, :column 3, :end-line 93, :end-column 13, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 93, :column 8, :end-line 93, :end-column 13}}, activate-created-graph {:protocol-inline nil, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 127, :column 7, :end-line 127, :end-column 29, :arglists (quote ([graph]))}, :name kinemagics.layout/activate-created-graph, :variadic false, :file "src\\kinemagics\\layout.cljs", :end-column 29, :method-params ([graph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 1, :fn-var true, :arglists (quote ([graph]))}, diy-btn {:name kinemagics.layout/diy-btn, :file "src\\kinemagics\\layout.cljs", :line 108, :column 1, :end-line 108, :end-column 13, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 108, :column 6, :end-line 108, :end-column 13}}, fps {:name kinemagics.layout/fps, :file "src\\kinemagics\\layout.cljs", :line 7, :column 1, :end-line 7, :end-column 9, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 7, :column 6, :end-line 7, :end-column 9}}, ctx-back {:name kinemagics.layout/ctx-back, :file "src\\kinemagics\\layout.cljs", :line 46, :column 1, :end-line 46, :end-column 14, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 46, :column 6, :end-line 46, :end-column 14}}, event-to-point-x {:protocol-inline nil, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 117, :column 7, :end-line 117, :end-column 23, :arglists (quote ([event]))}, :name kinemagics.layout/event-to-point-x, :variadic false, :file "src\\kinemagics\\layout.cljs", :end-column 23, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, mk-drawing-click-handler {:protocol-inline nil, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 131, :column 7, :end-line 131, :end-column 31, :arglists (quote ([]))}, :name kinemagics.layout/mk-drawing-click-handler, :variadic false, :file "src\\kinemagics\\layout.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, graph {:name kinemagics.layout/graph, :file "src\\kinemagics\\layout.cljs", :line 133, :column 3, :end-line 133, :end-column 13, :meta {:file "C:\\Users\\Wilson\\Desktop\\Clojure\\kinemagics\\src\\kinemagics\\layout.cljs", :line 133, :column 8, :end-line 133, :end-column 13}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:prev :dv :d :t :vel :graph-used}, :order [:d :t :vel :dv :prev :graph-used]}, :doc nil}